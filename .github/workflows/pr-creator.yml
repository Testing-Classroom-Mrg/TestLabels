name: Optimus PRime

on:
  pull_request:
    types: [opened, closed, ready_for_review, reopened, edited]

jobs:
  pr-status:
    runs-on: ubuntu-latest
    steps:
      - name: Log PR
        run: echo ${{ github.event.action }}
  # Add PR assignee.
  # The assignee added is the PR author.
  # Triggered when:
  #  - A PR is opened
  #  - The branch name does NOT start with "translations_"
  add-assignee:
    runs-on: ubuntu-latest
    steps:
      - name: Add assignee
        if: ${{ github.event.action == 'opened' && !startsWith(github.event.pull_request.head.ref, 'translations_') }}
        uses: actions/github-script@v1.1.0
        with:
          github-token: ${{github.token}}
          script: |
            github.issues.addAssignees({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.number,
              assignees: context.payload.pull_request.user.login
            })

  # Create a review request.
  # Add the android-devs pool as reviewer.
  # Triggered when:
  #   - A PR is opened and is NOT a draft
  #   - A PR becomes ready for review
  #   - A PR is reopened
  #   - The branch name does NOT start with "translations_"
  request-review:
    runs-on: ubuntu-latest
    steps:
      - name: Add reviewers
        if: |
          ${{ (github.event.action == 'opened' || github.event.action == 'ready_for_review'
          || github.event.action == 'reopened') && !github.event.pull_request.draft
          && !startsWith(github.event.pull_request.head.ref, 'translations_') }}
        uses: actions/github-script@v1.1.0
        with:
          github-token: ${{github.token}}
          script: |
            github.pulls.createReviewRequest({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.number,
              reviewers: ['android-devs']
            })

  # Add labels based on branch name
  add-branch-labels:
    runs-on: ubuntu-latest
    steps:
      - name: Add branch labels
        if: ${{ github.event.action == 'opened' }}
        uses: TimonVS/pr-labeler-action@v3
        with:
          configuration-path: .github/pr-labels.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Add pull request status-indicating labels
  add-status-label:
    runs-on: ubuntu-latest
    steps:
      - name: Clear status label
        uses: actions/github-script@v1.1.0
        with:
          github-token: ${{github.token}}
          script: |
            const prLabels = await github.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.number
            })
            if (prLabels.data.find(element => element.name == 'Ready for Review')) {
              github.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.number,
                name: 'Ready for Review'
              })
            } else if (prLabels.data.find(element => element.name == 'WIP')) {
              github.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.number,
                name: 'WIP'
               })
            } else if (prLabels.data.find(element => element.name == 'Ready')) {
              github.issues.removeLabel({
                 owner: context.repo.owner,
                 repo: context.repo.repo,
                 issue_number: context.payload.number,
                 name: 'Ready'
               })
            } else if(prLabels.data.find(element => element.name == 'Declined')) {
              github.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.number,
                name: 'Declined'
              })
            }
      - name: Add Ready for Review label
        if: |
          ${{ (github.event.action == 'opened' || github.event.action == 'ready_for_review'
          || github.event.action == 'reopened') && !github.event.pull_request.draft }}
        uses: actions/github-script@v1.1.0
        with:
          github-token: ${{github.token}}
          script: |
            github.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.number,
              labels: ['Ready for Review']
            })
      - name: Add WIP label
        if: ${{ github.event.action == 'opened' && github.event.pull_request.draft }}
        uses: actions/github-script@v1.1.0
        with:
          github-token: ${{github.token}}
          script: |
            github.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.number,
              labels: ['WIP']
            })
      - name: Add Ready label
        if: ${{ github.event.action == 'closed' && github.event.pull_request.merged}}
        uses: actions/github-script@v1.1.0
        with:
          github-token: ${{github.token}}
          script: |
            github.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.number,
              labels: ['Ready']
            })
      - name: Add Declined label
        if: ${{ github.event.action == 'closed' && !github.event.pull_request.merged}}
        uses: actions/github-script@v1.1.0
        with:
          github-token: ${{github.token}}
          script: |
            github.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.number,
              labels: ['Declined']
            })
